{"version":3,"sources":["hooks/use-interval.js","components/control.js","components/timer.js","components/lengthControl.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Control","props","type","onClick","handleClick","value","icon","Timer","viewBox","cx","cy","r","strokeDasharray","outerLength","d","style","stroke","outerColor","innerLength","innerColor","label","time","LengthControl","name","title","faArrowDown","onChange","handleChange","faArrowUp","App","audioRef","useState","sessionLength","setSessionLength","short","setShort","fourth","setFourth","breakLength","setBreakLength","displayTime","setDisplayTime","setCurrent","running","setRunning","newPeriod","setNewPeriod","remaining","setRemaining","pomodoros","setPomodoros","startTime","setStartTime","countFrom","setCountFrom","p","Date","now","Number","split","left","Math","floor","play","mm","concat","ss","displayValue","countdown","handleBreakClick","e","currentTarget","change","input","val","numVal","sessionLoopOutline","sessionLoopColor","breakLoopOutline","breakLoopColor","playPause","faPause","faPlay","repeat","pause","load","faSync","src","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dda91d42.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\r\n//hook by Dan Abramov https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  });\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n\r\n    if (delay) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Control = (props) => (\r\n  <button\r\n  \tid={props.id}\r\n    type='button'\r\n    onClick={props.handleClick}\r\n    value={props.value}\r\n  >\r\n    <FontAwesomeIcon icon={props.icon} />\r\n  </button>\r\n)\r\n\r\nexport default Control","const Timer = (props) => (\r\n  <div id='timer'>\r\n  \t<svg id='timer-svg' viewBox='0 0 100 100'>\r\n  \t\t<g id='timer-circle'>\r\n  \t\t\t<circle id='timer-circle-outter' cx='50' cy='50' r='45' />\r\n  \t\t\t<path\r\n\t\t        id=\"timer-circle-outer-rem\"\r\n\t\t        strokeDasharray={props.outerLength}\r\n\t\t        d=\"\r\n\t\t          M 50, 50\r\n\t\t          m -45, 0\r\n\t\t          a 45,45 0 1,0 90,0\r\n\t\t          a 45,45 0 1,0 -90,0\r\n\t\t        \"\r\n\t\t        style={{ stroke: props.outerColor }}\r\n\t\t    ></path>\r\n  \t\t\t<circle id='timer-circle-inner' cx='50' cy='50' r='40' />\r\n  \t\t\t<path\r\n\t\t        id=\"timer-circle-inner-rem\"\r\n\t\t        strokeDasharray={props.innerLength}\r\n\t\t        d=\"\r\n\t\t          M 50, 50\r\n\t\t          m -40, 0\r\n\t\t          a 40,40 0 1,0 80,0\r\n\t\t          a 40,40 0 1,0 -80,0\r\n\t\t        \"\r\n\t\t        style={{ stroke: props.innerColor }}\r\n\t\t    ></path>\r\n  \t\t</g>\r\n  \t</svg>\r\n  \t<div id='timer-text'>\r\n\t    <p id='timer-label'>{props.label}</p>\r\n\t    <p id='time-left'>{props.time}</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Timer","import Control from \"./control.js\"\r\nimport { faArrowDown, faArrowUp } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst LengthControl = (props) => (\r\n  <div id={props.name+'-wrapper'}>\r\n    <p id={props.name+'-label'}>{props.title}</p>\r\n    <Control \r\n      id={props.name+'-decrement'}\r\n      handleClick={props.handleClick}\r\n      icon={faArrowDown}\r\n      value='dec'\r\n    />\r\n    <input \r\n      type='text' \r\n      id={props.name+'-length'} \r\n      value={props.value} \r\n      onChange={props.handleChange} \r\n    />\r\n    <Control \r\n      id={props.name+'-increment'}\r\n      handleClick={props.handleClick}\r\n      icon={faArrowUp}\r\n      value='inc'\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default LengthControl","import { useState, useRef, useEffect } from 'react'\nimport { faPause, faPlay, faSync } from '@fortawesome/free-solid-svg-icons'\nimport useInterval from './hooks/use-interval'\nimport './App.scss'\n\nimport Control from './components/control.js'\nimport Timer from './components/timer.js'\nimport LengthControl from './components/lengthControl.js'\n\nconst App = (props) => {\n    //const intervalRef = useRef();\n    const audioRef = useRef();\n\n    const [sessionLength, setSessionLength] = useState(25); \n    const [short, setShort] = useState(5);\n    const [fourth, setFourth] = useState(15);     \n    const [breakLength, setBreakLength] = useState(short);\n    const [displayTime, setDisplayTime] = useState(sessionLength+':00');  \n    const [current, setCurrent] = useState('Session');    \n    const [running, setRunning] = useState(false);    \n    const [newPeriod, setNewPeriod] = useState('');\n    //283 is default because it matches the bigger circle\n    const [remaining, setRemaining] = useState('283'); \n    const [pomodoros, setPomodoros] = useState(0);\n    const [startTime, setStartTime] = useState(null);\n    const [countFrom, setCountFrom] = useState(null);\n    //This is the function that runs in a loop\n    //Takes the difference between the starting time and the moment at which runs \n    //Subtracts that from the initial length\n    //Does some calculations and string manipulation so the display value is always in the mm:ss format\n    const countdown = (startTime, countFrom) => {  \n        const difference = Math.floor((Date.now() - startTime) / 1000);\n        const left = countFrom - difference;\n        //this part plays a sound when the timer reaches 00:00\n        if (left === 0) audioRef.current.play();\n        if (left < 0) {\n            //Setting running to false triggers the effect which handles the interval setup \n            //or more precisely in this case - the cleanup\n            setRunning(false);\n            //This setter triggers effect responsive to newPeriod changes\n            setNewPeriod(current === 'Break' ? 'session' : 'break');\n            setRemaining('283')        \n        } else {\n            let mm = Math.floor(left / 60);\n            mm = mm < 10 ? '0'.concat(mm) : mm;\n            let ss = Math.floor(left % 60);\n            ss = ss < 10 ? '0'.concat(ss) : ss;\n\n            const displayValue = `${mm}:${ss}`;\n            const wholeLength = current === 'Session' ? sessionLength : breakLength;\n            const wholeCircle = current === 'Session' ? 251 : 283;\n            setRemaining(`${wholeCircle * left / (wholeLength * 60)}`);\n            setDisplayTime(displayValue);\n        }\n    }\n    //This effect responds to changes of newPeriod state variable - \n    //sets up a new session depending on which one just ended with the displayTime and everything \n    //AND sets running to true which again triggers the interval setter\n    useEffect(() => {\n        if (newPeriod === 'break') {\n            setCurrent('Break');\n            const length = breakLength < 10 ? '0'+breakLength : breakLength;\n            setDisplayTime(length+':00');\n            setRunning(true);\n            setPomodoros(p => p + 1);\n        } else if (newPeriod === 'session') {\n            setCurrent('Session');\n            const length = sessionLength < 10 ? '0'+sessionLength : sessionLength;\n            setDisplayTime(length+':00');\n            setRunning(true);\n            //The tally mark gets added only when a session ENDS so we set the longer break\n            //while in the 4th pomodoro i.e. when there are 3 tally marks\n            if (pomodoros === 3) setBreakLength(fourth);\n            if (pomodoros === 4) {\n                setBreakLength(short);\n                setPomodoros(0);\n            }\n        }\n    //eslint-disable-next-line\n    }, [newPeriod]);\n    //Responds to changes in sessionLength and adjusts the value displayed in the timer accordingly\n    useEffect(() => { \n        const length = sessionLength < 10 ? '0'+sessionLength : sessionLength;\n        setDisplayTime(length+':00') \n    }, [sessionLength]);\n    //Responds to each change of running value\n    //Sets up the variables that countdown depends on - the starting time and what value it counts down from\n    useEffect(() => {\n        setStartTime(Date.now());\n        setCountFrom(Number(displayTime.split(':')[0] * 60) + Number(displayTime.split(':')[1]));\n    //eslint-disable-next-line\n    }, [running]);\n\n    useInterval(() => { \n        countdown(startTime, countFrom); \n    }, running ? 1000 : null);       \n\n    useEffect(() => {\n        setBreakLength(short);\n    }, [short]);\n    //Handles incrementing and decrementing of the sessionLength\n    //If the timer is running the buttons do not respond\n    const handleSessionClick = (e) => {\n        const id = e.currentTarget.id;\n        if (!running) {\n            if (sessionLength < 60 && id === 'session-increment') \n              setSessionLength(sessionLength => sessionLength + 1);\n            if (sessionLength > 1 && id === 'session-decrement') \n              setSessionLength(sessionLength => sessionLength - 1);\n        }\n    }\n    //Handles incrementing and decrementing of the breakLength\n    //If the timer is running the buttons do not respond\n    const handleBreakClick = (e) => {\n        const id = e.currentTarget.id;\n        if (!running) {\n            if (short < 60 && id === 'short-increment') setShort(breakLength => breakLength + 1);\n            if (short > 1 && id === 'short-decrement') setShort(breakLength => breakLength - 1);\n            if (fourth < 60 && id === 'fourth-increment') setFourth(breakLength => breakLength + 1);\n            if (fourth > 1 && id === 'fourth-decrement') setFourth(breakLength => breakLength - 1);\n        }\n    }\n    //Handles a click on the start_stop button \n    //Changes the value of running and the effects take care of the rest\n    const startPause = () => {\n        setRunning(running => !running);\n    }\n    //Handles a click on the reset button\n    //Sets everything back to the initial state and in case the button is pressed in the middle of the sound playing\n    //it stops the playback and rewinds the audio to the beginning\n    const reset = () => {\n        setCurrent('Session');\n        setSessionLength(25);\n        setBreakLength(5);\n        setRunning(false);\n        setNewPeriod('');\n        audioRef.current.pause();\n        audioRef.current.load();\n    }\n    const change = (e) => {\n        const input = e.currentTarget;\n        const val = input.value;\n        const numVal = Number(val);\n\n        if (!running) {\n            if ((numVal > 0 && numVal <= 60) || val === '') {\n                if (input.id === 'session-length') setSessionLength(numVal);\n                if (input.id === 'short-length') setShort(numVal);\n                if (input.id === 'fourth-length') setFourth(numVal);\n            }\n        }\n    }\n    //The 'tomato' becomes green when on a break and is red otherwise \n    const sessionLoopOutline = current === 'Session' ? `${remaining} 251` : \"251\";\n    const sessionLoopColor = current === 'Session' ? \"rgb(213, 101, 103)\" : \"rgba(255, 255, 255, 0.1)\";\n    const breakLoopOutline = current === 'Break' ? `${remaining} 283` : \"283\";\n    const breakLoopColor = current === 'Break' ? \"rgb(159, 213, 101)\" : \"rgba(255, 255, 255, 0.1)\";\n\n    //Handles the icon of the start_pause button\n    const playPause = running ? faPause : faPlay;\n    const beepUrl = \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\";\n    \n    return (\n        <div id='app'>    \n            <div id='length-control'>\n                <LengthControl \n                  name='session'\n                  title='Session'\n                  handleClick={handleSessionClick}\n                  value={sessionLength}\n                  handleChange={change}\n                />\n                <LengthControl \n                  name='short'\n                  title='Short break'\n                  handleClick={handleBreakClick}\n                  value={short}\n                  handleChange={change}\n                />\n                <LengthControl \n                  name='fourth'\n                  title='Fourth break'\n                  handleClick={handleBreakClick}\n                  value={fourth}\n                  handleChange={change}\n                />  \n                <p id='counter'>\n                    {`Pomodoros done: ${'|'.repeat(pomodoros)}`}\n                </p>\n            </div>\n            <div id='timer-controls-wrapper'>\n                <Timer \n                  label={current}\n                  time={displayTime}\n                  innerColor={sessionLoopColor}\n                  innerLength={sessionLoopOutline}\n                  outerColor={breakLoopColor}\n                  outerLength={breakLoopOutline}\n                />\n                <div id='controls'>\n                    <Control\n                      id='start_stop'\n                      handleClick={startPause}\n                      icon={playPause}\n                    />\n                    <Control\n                      id='reset'\n                      handleClick={reset}\n                      icon={faSync}\n                    />\n                    <audio \n                      id='beep' \n                      src={beepUrl}\n                      ref={audioRef} \n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}